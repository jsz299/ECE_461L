{"map":"{\"version\":3,\"sources\":[\"/Users/jackzhao/Documents/ECE_461L/ReactFlaskServerSide/src/App.js\",\"/Users/jackzhao/Documents/ECE_461L/ReactFlaskServerSide/src/reportWebVitals.js\",\"/Users/jackzhao/Documents/ECE_461L/ReactFlaskServerSide/src/index.js\"],\"names\":[\"App\",\"username\",\"setUsername\",\"useState\",\"userID\",\"setUserID\",\"password\",\"setPassword\",\"React\",\"createElement\",\"className\",\"onSubmit\",\"async\",\"e\",\"preventDefault\",\"userInfo\",\"response\",\"fetch\",\"method\",\"headers\",\"Content-Type\",\"body\",\"JSON\",\"stringify\",\"json\",\"type\",\"value\",\"onChange\",\"target\",\"placeholder\",\"reportWebVitals\",\"onPerfEntry\",\"Function\",\"__webpack_require__\",\"then\",\"bind\",\"_ref\",\"getCLS\",\"getFID\",\"getFCP\",\"getLCP\",\"getTTFB\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"render\",\"StrictMode\"],\"mappings\":\"+NAmEeA,IAAAA,EA/Df,WAEI,MAAOC,EAAUC,GAAeC,OAAAA,EAAAA,SAAAA,CAAS,KAClCC,EAAQC,GAAaF,OAAAA,EAAAA,SAAAA,CAAS,KAC9BG,EAAUC,GAAeJ,OAAAA,EAAAA,SAAAA,CAAS,IAgCzC,OACIK,EAAAA,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACXF,EAAAA,EAAAC,cAAA,OAAA,CAAME,SA1BOC,MAAAA,IAEjBC,EAAEC,iBAGF,MAAMC,EAAW,CACbd,SAAAA,EACAG,OAAAA,EACAE,SAAAA,GAIEU,QAAiBC,MAAM,iBAAkB,CAC3CC,OAAQ,OACRC,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUR,WAGNC,EAASQ,SAOpBhB,EAAAA,EAAAC,cAAA,QAAA,CACIgB,KAAK,OACLC,MAAOzB,EACP0B,SAnCcd,GAAMX,EAAYW,EAAEe,OAAOF,OAoCzCG,YAAY,aAEhBrB,EAAAA,EAAAC,cAAA,QAAA,CACIgB,KAAK,OACLC,MAAOtB,EACPuB,SAxCYd,GAAMR,EAAUQ,EAAEe,OAAOF,OAyCrCG,YAAY,YAEhBrB,EAAAA,EAAAC,cAAA,QAAA,CACIgB,KAAK,WACLC,MAAOpB,EACPqB,SA7Ccd,GAAMN,EAAYM,EAAEe,OAAOF,OA8CzCG,YAAY,aAEhBrB,EAAAA,EAAAC,cAAA,SAAA,CAAQgB,KAAK,UAAS,sDCjDvBK,IAAAA,EAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAApB,EAAA,GAAAqB,KAAAD,EAAAE,KAAA,KAAA,MAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCADW,EAAAA,EAASC,WAAWC,SAASC,eAAe,SACpDC,OACHtC,EAAAA,EAAAC,cAACD,EAAAA,EAAMuC,WAAU,KACfvC,EAAAA,EAAAC,cAACT,EAAG,QAgBR8B\",\"sourcesContent\":[\"import './App.css';\\nimport React, { useState } from \\\"react\\\";\\n\\n\\nfunction App() {\\n// Initialize state\\n    const [username, setUsername] = useState('');\\n    const [userID, setUserID] = useState('');\\n    const [password, setPassword] = useState('');\\n\\n    // Handlers for updating the state based on user input\\n    const handleUsernameChange = (e) => setUsername(e.target.value);\\n    const handleUserIDChange = (e) => setUserID(e.target.value);\\n    const handlePasswordChange = (e) => setPassword(e.target.value);\\n\\n    // Handler for pressing submit\\n    const handleSubmit = async (e) => {\\n        // Prevent form from actually submitting without a chance to validate or process input before submitting it to the server\\n        e.preventDefault(); \\n\\n        // Combine user input into a single object\\n        const userInfo = {\\n            username,\\n            userID,\\n            password,\\n        };\\n\\n        // Send the information to the Flask API\\n        const response = await fetch('/createaccount', {\\n            method: 'POST',\\n            headers: {\\n                'Content-Type': 'application/json',\\n            },\\n            body: JSON.stringify(userInfo),\\n        });\\n\\n        const data = await response.json();\\n        // Handle the response data as needed\\n    };\\n\\n    return (\\n        <div className=\\\"App\\\">\\n            <form onSubmit={handleSubmit}>\\n                <input\\n                    type=\\\"text\\\"\\n                    value={username}\\n                    onChange={handleUsernameChange}\\n                    placeholder=\\\"Username\\\"\\n                />\\n                <input\\n                    type=\\\"text\\\"\\n                    value={userID}\\n                    onChange={handleUserIDChange}\\n                    placeholder=\\\"User ID\\\"\\n                />\\n                <input\\n                    type=\\\"password\\\"\\n                    value={password}\\n                    onChange={handlePasswordChange}\\n                    placeholder=\\\"Password\\\"\\n                />\\n                <button type=\\\"submit\\\">Create Account</button>\\n            </form>\\n        </div>\\n    );\\n}\\n\\nexport default App;\\n\\n// Below is example code from Professor \\n\\n// function App() {\\n//     const [firstName, setFirstName] = useState(\\\"\\\")\\n//     const [lastName, getLastName] = useState(\\\"\\\")\\n//\\n//     const onClick = async(e) => {\\n//\\n//     console.log(\\\"Button was clicked\\\")\\n//\\n//     const requestOptions = {\\n//         method: \\\"GET\\\"\\n//     }\\n//\\n//\\n//\\n//         await fetch(\\\"/firstname/\\\", {\\n//             method: \\\"POST\\\",\\n//             headers: {\\\"Content-Type\\\" : \\\"application/json\\\"},\\n//             //mode: \\\"cors\\\",\\n//             body: JSON.stringify({'firstname':firstName})\\n//         })\\n//\\n//     await fetch(\\\"/lastname/\\\", requestOptions)\\n//         .then(response => response.json())\\n//         .then(data => getLastName(data.lastname))\\n//         .then(console.log(lastName));\\n//     }\\n\\n\\n//   return (\\n//     <div className=\\\"App\\\">\\n//         <h2>Name Finder</h2>\\n//         <label>\\n//             Please enter my first name:\\n//             <br />\\n//             <input value={firstName} name=\\\"firstName\\\" onChange={e => setFirstName(e.target.value)} />\\n//             <button onClick={onClick}>Submit</button>\\n//         </label>\\n//\\n//         <br />\\n//\\n//         <p><strong>{lastName}</strong></p>\\n//     </div>\\n//   );\\n// }\",\"const reportWebVitals = onPerfEntry => {\\n  if (onPerfEntry && onPerfEntry instanceof Function) {\\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\\n      getCLS(onPerfEntry);\\n      getFID(onPerfEntry);\\n      getFCP(onPerfEntry);\\n      getLCP(onPerfEntry);\\n      getTTFB(onPerfEntry);\\n    });\\n  }\\n};\\n\\nexport default reportWebVitals;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport './index.css';\\nimport App from './App';\\nimport Projects from './Projects';\\nimport reportWebVitals from './reportWebVitals';\\n\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\nroot.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>\\n);\\n\\n// function ProjectPage() {\\n//   return (\\n//     <div className=\\\"index\\\">\\n//       <Projects /> {/* This renders the Projects component */}\\n//     </div>\\n//   );\\n// }\\n\\n\\n// If you want to start measuring performance in your app, pass a function\\n// to log results (for example: reportWebVitals(console.log))\\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\\nreportWebVitals();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{57:function(e,t,n){e.exports=n(73)},66:function(e,t,n){},67:function(e,t,n){},73:function(e,t,n){\"use strict\";n.r(t);var a=n(0),o=n.n(a),r=n(51),c=n.n(r);n(66),n(67);var u=function(){const[e,t]=Object(a.useState)(\"\"),[n,r]=Object(a.useState)(\"\"),[c,u]=Object(a.useState)(\"\");return o.a.createElement(\"div\",{className:\"App\"},o.a.createElement(\"form\",{onSubmit:async t=>{t.preventDefault();const a={username:e,userID:n,password:c},o=await fetch(\"/createaccount\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(a)});await o.json()}},o.a.createElement(\"input\",{type:\"text\",value:e,onChange:e=>t(e.target.value),placeholder:\"Username\"}),o.a.createElement(\"input\",{type:\"text\",value:n,onChange:e=>r(e.target.value),placeholder:\"User ID\"}),o.a.createElement(\"input\",{type:\"password\",value:c,onChange:e=>u(e.target.value),placeholder:\"Password\"}),o.a.createElement(\"button\",{type:\"submit\"},\"Create Account\")))};n(102),n(99),n(101),n(100),n(98);var l=e=>{e&&e instanceof Function&&n.e(3).then(n.bind(null,103)).then(t=>{let{getCLS:n,getFID:a,getFCP:o,getLCP:r,getTTFB:c}=t;n(e),a(e),o(e),r(e),c(e)})};c.a.createRoot(document.getElementById(\"root\")).render(o.a.createElement(o.a.StrictMode,null,o.a.createElement(u,null))),l()}},[[57,1,2]]]);","extractedComments":[]}