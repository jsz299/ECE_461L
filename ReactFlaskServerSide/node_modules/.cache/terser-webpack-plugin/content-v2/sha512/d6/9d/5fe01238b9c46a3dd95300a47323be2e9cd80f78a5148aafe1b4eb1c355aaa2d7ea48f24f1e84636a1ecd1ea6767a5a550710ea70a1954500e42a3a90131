{"map":"{\"version\":3,\"sources\":[\"/Users/jackzhao/Documents/ECE_461L/ReactFlaskServerSide/src/Home.js\",\"/Users/jackzhao/Documents/ECE_461L/ReactFlaskServerSide/src/Project.js\",\"/Users/jackzhao/Documents/ECE_461L/ReactFlaskServerSide/src/Projects.js\",\"/Users/jackzhao/Documents/ECE_461L/ReactFlaskServerSide/src/reportWebVitals.js\",\"/Users/jackzhao/Documents/ECE_461L/ReactFlaskServerSide/src/index.js\"],\"names\":[\"Home\",\"navigate\",\"useNavigate\",\"open\",\"setOpen\",\"useState\",\"loginUsername\",\"setLoginUsername\",\"loginUserID\",\"setLoginUserID\",\"loginPassword\",\"setLoginPassword\",\"username\",\"setUsername\",\"userID\",\"setUserID\",\"password\",\"setPassword\",\"React\",\"createElement\",\"Container\",\"maxWidth\",\"Grid\",\"container\",\"spacing\",\"item\",\"xs\",\"md\",\"Typography\",\"variant\",\"gutterBottom\",\"onSubmit\",\"async\",\"e\",\"preventDefault\",\"userInfo\",\"response\",\"fetch\",\"method\",\"headers\",\"Content-Type\",\"body\",\"JSON\",\"stringify\",\"json\",\"authentication\",\"localStorage\",\"setItem\",\"style\",\"display\",\"flexDirection\",\"gap\",\"TextField\",\"label\",\"value\",\"onChange\",\"target\",\"type\",\"Button\",\"color\",\"Snackbar\",\"autoHideDuration\",\"onClose\",\"handleClose\",\"event\",\"reason\",\"message\",\"Project\",\"_ref\",\"name\",\"hwSet1\",\"hwSet2\",\"onJoinLeave\",\"joined\",\"setJoined\",\"Card\",\"sx\",\"margin\",\"CardContent\",\"justifyContent\",\"alignItems\",\"Box\",\"component\",\"onClick\",\"handleJoinLeave\",\"Projects\",\"handleJoinLeaveProject\",\"projectName\",\"console\",\"log\",\"concat\",\"padding\",\"flexWrap\",\"map\",\"project\",\"index\",\"key\",\"handleClickOpen\",\"Dialog\",\"DialogTitle\",\"DialogContent\",\"autoFocus\",\"id\",\"fullWidth\",\"DialogActions\",\"projectInfo\",\"getItem\",\"document\",\"getElementById\",\"description\",\"projectId\",\"reportWebVitals\",\"onPerfEntry\",\"Function\",\"__webpack_require__\",\"then\",\"bind\",\"getCLS\",\"getFID\",\"getFCP\",\"getLCP\",\"getTTFB\",\"Main\",\"Router\",\"Routes\",\"Route\",\"path\",\"element\",\"ReactDOM\",\"createRoot\",\"render\",\"StrictMode\"],\"mappings\":\"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\",\"sourcesContent\":[\"import './Home.css';\\nimport { Container, TextField, Button, Typography, Grid, Snackbar } from \\\"@mui/material\\\";\\nimport React, { useState } from \\\"react\\\";\\nimport {useNavigate} from \\\"react-router-dom\\\";\\n\\n\\nfunction Home() {\\n    // Used for navigating across different views/pages\\n    const navigate = useNavigate()\\n    // Initialize state of snackbar ~ material ui component that creates a pop-up\\n    const [open, setOpen] = useState(false);\\n\\n    // Initialize state of text fields\\n    const [loginUsername, setLoginUsername] = useState('');\\n    const [loginUserID, setLoginUserID] = useState('');\\n    const [loginPassword, setLoginPassword] = useState('');\\n    const [username, setUsername] = useState('');\\n    const [userID, setUserID] = useState('');\\n    const [password, setPassword] = useState('');\\n\\n\\n    // Handlers for updating the state based on user input\\n    const handleUsernameChange = (e) => setUsername(e.target.value);\\n    const handleUserIDChange = (e) => setUserID(e.target.value);\\n    const handlePasswordChange = (e) => setPassword(e.target.value);\\n\\n    const handleClose = (event, reason) => {\\n        if (reason === 'clickaway') {\\n            return;\\n        }\\n        setOpen(false);\\n    };\\n\\n\\n    //Handler for pressing login\\n    const handleLogin = async (e) => {\\n        e.preventDefault();\\n\\n        // Combine user input into a single object\\n        const userInfo = {\\n            loginUsername,\\n            loginUserID,\\n            loginPassword,\\n        };\\n\\n        // Send the information to the Flask API\\n        const response = await fetch('/login', {\\n            method: 'POST',\\n            headers: {\\n                'Content-Type': 'application/json',\\n            },\\n            body: JSON.stringify(userInfo),\\n        });\\n\\n        // Stores the json response from API\\n        const data = await response.json();\\n\\n        // Checks if user credentials are legit\\n        if(data.authentication == true){\\n            localStorage.setItem('username', loginUsername);\\n            navigate('/projects'); // Route defined in index.js\\n        } else {\\n            setOpen(true);\\n        }\\n    };\\n\\n\\n    // Handler for pressing submit\\n    const handleSubmit = async (e) => {\\n        // Prevent form from actually submitting without a chance to validate or process input before submitting it to the server\\n        e.preventDefault(); \\n\\n        // Combine user input into a single object\\n        const userInfo = {\\n            username,\\n            userID,\\n            password,\\n        };\\n\\n        // Send the information to the Flask API\\n        const response = await fetch('/createaccount', {\\n            method: 'POST',\\n            headers: {\\n                'Content-Type': 'application/json',\\n            },\\n            body: JSON.stringify(userInfo),\\n        });\\n\\n        const data = await response.json();\\n        // Handle the response data as needed\\n    };\\n\\n    return (\\n        <Container maxWidth=\\\"lg\\\">\\n            <Grid container spacing={2}>\\n                <Grid item xs={12} md={6}>\\n                    <Typography variant=\\\"h5\\\" gutterBottom>Login</Typography>\\n                    <form onSubmit={handleLogin} style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\\n                        <TextField\\n                            label=\\\"Username\\\"\\n                            variant=\\\"outlined\\\"\\n                            value={loginUsername}\\n                            onChange={(e) => setLoginUsername(e.target.value)}\\n                        />\\n                        <TextField\\n                            label=\\\"User ID\\\"\\n                            variant=\\\"outlined\\\"\\n                            value={loginUserID}\\n                            onChange={(e) => setLoginUserID(e.target.value)}\\n                        />\\n                        <TextField\\n                            label=\\\"Password\\\"\\n                            type=\\\"password\\\"\\n                            variant=\\\"outlined\\\"\\n                            value={loginPassword}\\n                            onChange={(e) => setLoginPassword(e.target.value)}\\n                        />\\n                        <Button type=\\\"submit\\\" variant=\\\"contained\\\" color=\\\"primary\\\">Login</Button>\\n                    </form>\\n                </Grid>\\n                <Grid item xs={12} md={6}>\\n                    <Typography variant=\\\"h5\\\" gutterBottom>Create Account</Typography>\\n                    <form onSubmit={handleSubmit} style={{display: 'flex', flexDirection: 'column', gap: '20px'}}>\\n                        <TextField\\n                            label=\\\"Username\\\"\\n                            variant=\\\"outlined\\\"\\n                            value={username}\\n                            onChange={handleUsernameChange}\\n                        />\\n                        <TextField\\n                            label=\\\"User ID\\\"\\n                            variant=\\\"outlined\\\"\\n                            value={userID}\\n                            onChange={handleUserIDChange}\\n                        />\\n                        <TextField\\n                            label=\\\"Password\\\"\\n                            type=\\\"password\\\"\\n                            variant=\\\"outlined\\\"\\n                            value={password}\\n                            onChange={handlePasswordChange}\\n                        />\\n                        <Button type=\\\"submit\\\" variant=\\\"contained\\\" color=\\\"primary\\\">Submit</Button>\\n                    </form>\\n                </Grid>\\n            </Grid>\\n             {/* Snackbar for showing the login error message */}\\n            <Snackbar\\n                open={open}\\n                autoHideDuration={6000}\\n                onClose={handleClose}\\n                message=\\\"Wrong Credentials. Please try again.\\\"\\n            />\\n        </Container>\\n    );\\n}\\n\\nexport default Home;\\n\\n// Below is example code from Professor \\n\\n// function Home() {\\n//     const [firstName, setFirstName] = useState(\\\"\\\")\\n//     const [lastName, getLastName] = useState(\\\"\\\")\\n//\\n//     const onClick = async(e) => {\\n//\\n//     console.log(\\\"Button was clicked\\\")\\n//\\n//     const requestOptions = {\\n//         method: \\\"GET\\\"\\n//     }\\n//\\n//\\n//\\n//         await fetch(\\\"/firstname/\\\", {\\n//             method: \\\"POST\\\",\\n//             headers: {\\\"Content-Type\\\" : \\\"application/json\\\"},\\n//             //mode: \\\"cors\\\",\\n//             body: JSON.stringify({'firstname':firstName})\\n//         })\\n//\\n//     await fetch(\\\"/lastname/\\\", requestOptions)\\n//         .then(response => response.json())\\n//         .then(data => getLastName(data.lastname))\\n//         .then(console.log(lastName));\\n//     }\\n\\n\\n//   return (\\n//     <div className=\\\"Home\\\">\\n//         <h2>Name Finder</h2>\\n//         <label>\\n//             Please enter my first name:\\n//             <br />\\n//             <input value={firstName} name=\\\"firstName\\\" onChange={e => setFirstName(e.target.value)} />\\n//             <button onClick={onClick}>Submit</button>\\n//         </label>\\n//\\n//         <br />\\n//\\n//         <p><strong>{lastName}</strong></p>\\n//     </div>\\n//   );\\n// }\",\"import React, { useState } from 'react';\\nimport { Card, CardContent, Button, Typography, Box } from '@mui/material';\\n\\nconst Project = ({ name, hwSet1, hwSet2, onJoinLeave }) => {\\n  const [joined, setJoined] = useState(false);\\n\\n  const handleJoinLeave = () => {\\n    setJoined(!joined);\\n    onJoinLeave(name);\\n  };\\n\\n  return (\\n    <Card variant=\\\"outlined\\\" sx={{ margin: 2 }}>\\n      <CardContent sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\\n        {/* Use Box components to group items and apply flex as needed */}\\n        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start', gap: 1 }}>\\n          <Typography variant=\\\"h5\\\" component=\\\"div\\\">\\n            {name}\\n          </Typography>\\n          <Typography color=\\\"text.secondary\\\">\\n            list of authorized users\\n          </Typography>\\n        </Box>\\n\\n        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start', gap: 1 }}>\\n          <Typography variant=\\\"body2\\\">\\n            HWSet1: {hwSet1}\\n          </Typography>\\n          <Typography variant=\\\"body2\\\">\\n            HWSet2: {hwSet2}\\n          </Typography>\\n        </Box>\\n\\n        <Button\\n          variant=\\\"contained\\\"\\n          color={joined ? \\\"secondary\\\" : \\\"primary\\\"}\\n          onClick={handleJoinLeave}\\n        >\\n          {joined ? \\\"Leave\\\" : \\\"Join\\\"}\\n        </Button>\\n      </CardContent>\\n    </Card>\\n  );\\n};\\n\\nexport default Project;\\n\",\"import React, {useState} from 'react';\\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField, Typography } from '@mui/material';\\nimport Project from './Project'; // Assuming you have a separate Project component\\n\\nconst Projects = () => {\\n    const [open, setOpen] = useState(false);\\n    const handleClickOpen = () => {\\n        setOpen(true);\\n    };\\n\\n    const handleClose = () => {\\n        setOpen(false);\\n    };\\n    const handleSubmitProject = async () => {\\n        const loggedInUsername = localStorage.getItem('username')\\n      const projectInfo = {\\n        username: loggedInUsername,\\n        name: document.getElementById('name').value,\\n        description: document.getElementById('description').value,\\n        projectId: document.getElementById('projectID').value,\\n      };\\n\\n      await fetch(`/create_project/${projectInfo.projectId}`, {\\n        method: 'POST',\\n        headers: {\\n          'Content-Type': 'application/json',\\n        },\\n        body: JSON.stringify({ name: projectInfo.name, description: projectInfo.description }),\\n      });\\n\\n      handleClose(); // Close the dialog\\n    };\\n\\n\\n\\n  // Dummy data for demonstration purposes\\n  const projectsData = [\\n    { name: \\\"Project Name 1\\\", hwSet1: \\\"50/100\\\", hwSet2: \\\"0/100\\\" },\\n    { name: \\\"Project Name 2\\\", hwSet1: \\\"50/100\\\", hwSet2: \\\"0/100\\\" },\\n    { name: \\\"Project Name 3\\\", hwSet1: \\\"0/100\\\", hwSet2: \\\"0/100\\\" },\\n  ];\\n\\n  const handleJoinLeaveProject = (projectName) => {\\n    console.log(`${projectName} join/leave clicked`);\\n    // Logic to handle join/leave\\n  };\\n\\n  return (\\n    <div style={{ padding: 20 }}>\\n      <Typography variant=\\\"h4\\\" gutterBottom>\\n        Projects\\n      </Typography>\\n      <div style={{ display: 'flex', flexDirection: 'column', flexWrap: 'wrap', gap: '20px', justifyContent: 'center' }}>\\n        {projectsData.map((project, index) => (\\n          <Project\\n            key={index}\\n            name={project.name}\\n            hwSet1={project.hwSet1}\\n            hwSet2={project.hwSet2}\\n            onJoinLeave={handleJoinLeaveProject}\\n          />\\n        ))}\\n      </div>\\n        <Button variant=\\\"outlined\\\" onClick={handleClickOpen}>Create Project</Button>\\n        <Dialog open={open} onClose={handleClose}>\\n            <DialogTitle>Create a New Project</DialogTitle>\\n            <DialogContent>\\n              <TextField autoFocus margin=\\\"dense\\\" id=\\\"name\\\" label=\\\"Project Name\\\" type=\\\"text\\\" fullWidth />\\n              <TextField margin=\\\"dense\\\" id=\\\"description\\\" label=\\\"Description\\\" type=\\\"text\\\" fullWidth />\\n              <TextField margin=\\\"dense\\\" id=\\\"projectID\\\" label=\\\"Project ID\\\" type=\\\"text\\\" fullWidth />\\n            </DialogContent>\\n            <DialogActions>\\n              <Button onClick={handleClose}>Cancel</Button>\\n              <Button onClick={handleSubmitProject}>Submit</Button>\\n            </DialogActions>\\n      </Dialog>\\n    </div>\\n  );\\n};\\n\\nexport default Projects;\\n\",\"const reportWebVitals = onPerfEntry => {\\n  if (onPerfEntry && onPerfEntry instanceof Function) {\\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\\n      getCLS(onPerfEntry);\\n      getFID(onPerfEntry);\\n      getFCP(onPerfEntry);\\n      getLCP(onPerfEntry);\\n      getTTFB(onPerfEntry);\\n    });\\n  }\\n};\\n\\nexport default reportWebVitals;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\\nimport './index.css';\\nimport Home from './Home';\\nimport Projects from './Projects';\\nimport reportWebVitals from './reportWebVitals';\\n\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\nroot.render(\\n  <React.StrictMode>\\n    <Main />\\n  </React.StrictMode>\\n);\\n\\n\\nfunction Main() {\\n  return (\\n    <Router>\\n      <div>\\n        {/* Define your routes here */}\\n        <Routes>\\n          <Route path=\\\"/\\\" element={<Home />} /> {/* Main entry or home page */}\\n          <Route path=\\\"/projects\\\" element={<Projects />} /> {/* Route to list projects */}\\n          {/* Example: <Route path=\\\"/projects/:projectId\\\" element={<Project />} /> */}\\n        </Routes>\\n      </div>\\n    </Router>\\n  );\\n}\\n\\n// If you want to start measuring performance in your app, pass a function\\n// to log results (for example: reportWebVitals(console.log))\\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\\nreportWebVitals();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{106:function(e,t,a){},107:function(e,t,a){},114:function(e,t,a){\"use strict\";a.r(t);var n=a(0),l=a.n(n),r=a(80),o=a.n(r),c=a(64),i=a(5),m=(a(106),a(107),a(171)),s=a(172),u=a(123),d=a(166),p=a(167),g=a(169);var E=function(){const e=Object(i.o)(),[t,a]=Object(n.useState)(!1),[r,o]=Object(n.useState)(\"\"),[c,E]=Object(n.useState)(\"\"),[v,y]=Object(n.useState)(\"\"),[h,f]=Object(n.useState)(\"\"),[S,b]=Object(n.useState)(\"\"),[j,w]=Object(n.useState)(\"\");return l.a.createElement(m.a,{maxWidth:\"lg\"},l.a.createElement(s.a,{container:!0,spacing:2},l.a.createElement(s.a,{item:!0,xs:12,md:6},l.a.createElement(u.a,{variant:\"h5\",gutterBottom:!0},\"Login\"),l.a.createElement(\"form\",{onSubmit:async t=>{t.preventDefault();const n={loginUsername:r,loginUserID:c,loginPassword:v},l=await fetch(\"/login\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(n)});1==(await l.json()).authentication?(localStorage.setItem(\"username\",r),e(\"/projects\")):a(!0)},style:{display:\"flex\",flexDirection:\"column\",gap:\"20px\"}},l.a.createElement(d.a,{label:\"Username\",variant:\"outlined\",value:r,onChange:e=>o(e.target.value)}),l.a.createElement(d.a,{label:\"User ID\",variant:\"outlined\",value:c,onChange:e=>E(e.target.value)}),l.a.createElement(d.a,{label:\"Password\",type:\"password\",variant:\"outlined\",value:v,onChange:e=>y(e.target.value)}),l.a.createElement(p.a,{type:\"submit\",variant:\"contained\",color:\"primary\"},\"Login\"))),l.a.createElement(s.a,{item:!0,xs:12,md:6},l.a.createElement(u.a,{variant:\"h5\",gutterBottom:!0},\"Create Account\"),l.a.createElement(\"form\",{onSubmit:async e=>{e.preventDefault();const t={username:h,userID:S,password:j},a=await fetch(\"/createaccount\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(t)});await a.json()},style:{display:\"flex\",flexDirection:\"column\",gap:\"20px\"}},l.a.createElement(d.a,{label:\"Username\",variant:\"outlined\",value:h,onChange:e=>f(e.target.value)}),l.a.createElement(d.a,{label:\"User ID\",variant:\"outlined\",value:S,onChange:e=>b(e.target.value)}),l.a.createElement(d.a,{label:\"Password\",type:\"password\",variant:\"outlined\",value:j,onChange:e=>w(e.target.value)}),l.a.createElement(p.a,{type:\"submit\",variant:\"contained\",color:\"primary\"},\"Submit\")))),l.a.createElement(g.a,{open:t,autoHideDuration:6e3,onClose:(e,t)=>{\"clickaway\"!==t&&a(!1)},message:\"Wrong Credentials. Please try again.\"}))},v=a(178),y=a(165),h=a(179),f=a(180),S=a(176),b=a(177),j=a(174);var w=e=>{let{name:t,hwSet1:a,hwSet2:r,onJoinLeave:o}=e;const[c,i]=Object(n.useState)(!1);return l.a.createElement(S.a,{variant:\"outlined\",sx:{margin:2}},l.a.createElement(b.a,{sx:{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"}},l.a.createElement(j.a,{sx:{display:\"flex\",flexDirection:\"column\",alignItems:\"flex-start\",gap:1}},l.a.createElement(u.a,{variant:\"h5\",component:\"div\"},t),l.a.createElement(u.a,{color:\"text.secondary\"},\"list of authorized users\")),l.a.createElement(j.a,{sx:{display:\"flex\",flexDirection:\"column\",alignItems:\"flex-start\",gap:1}},l.a.createElement(u.a,{variant:\"body2\"},\"HWSet1: \",a),l.a.createElement(u.a,{variant:\"body2\"},\"HWSet2: \",r)),l.a.createElement(p.a,{variant:\"contained\",color:c?\"secondary\":\"primary\",onClick:()=>{i(!c),o(t)}},c?\"Leave\":\"Join\")))};var x=()=>{const[e,t]=Object(n.useState)(!1),a=()=>{t(!1)},r=e=>{console.log(\"\".concat(e,\" join/leave clicked\"))};return l.a.createElement(\"div\",{style:{padding:20}},l.a.createElement(u.a,{variant:\"h4\",gutterBottom:!0},\"Projects\"),l.a.createElement(\"div\",{style:{display:\"flex\",flexDirection:\"column\",flexWrap:\"wrap\",gap:\"20px\",justifyContent:\"center\"}},[{name:\"Project Name 1\",hwSet1:\"50/100\",hwSet2:\"0/100\"},{name:\"Project Name 2\",hwSet1:\"50/100\",hwSet2:\"0/100\"},{name:\"Project Name 3\",hwSet1:\"0/100\",hwSet2:\"0/100\"}].map((e,t)=>l.a.createElement(w,{key:t,name:e.name,hwSet1:e.hwSet1,hwSet2:e.hwSet2,onJoinLeave:r}))),l.a.createElement(p.a,{variant:\"outlined\",onClick:()=>{t(!0)}},\"Create Project\"),l.a.createElement(v.a,{open:e,onClose:a},l.a.createElement(y.a,null,\"Create a New Project\"),l.a.createElement(h.a,null,l.a.createElement(d.a,{autoFocus:!0,margin:\"dense\",id:\"name\",label:\"Project Name\",type:\"text\",fullWidth:!0}),l.a.createElement(d.a,{margin:\"dense\",id:\"description\",label:\"Description\",type:\"text\",fullWidth:!0}),l.a.createElement(d.a,{margin:\"dense\",id:\"projectID\",label:\"Project ID\",type:\"text\",fullWidth:!0})),l.a.createElement(f.a,null,l.a.createElement(p.a,{onClick:a},\"Cancel\"),l.a.createElement(p.a,{onClick:async()=>{const e={username:localStorage.getItem(\"username\"),name:document.getElementById(\"name\").value,description:document.getElementById(\"description\").value,projectId:document.getElementById(\"projectID\").value};await fetch(\"/create_project/\".concat(e.projectId),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({name:e.name,description:e.description})}),a()}},\"Submit\"))))};var C=e=>{e&&e instanceof Function&&a.e(3).then(a.bind(null,181)).then(t=>{let{getCLS:a,getFID:n,getFCP:l,getLCP:r,getTTFB:o}=t;a(e),n(e),l(e),r(e),o(e)})};function I(){return l.a.createElement(c.a,null,l.a.createElement(\"div\",null,l.a.createElement(i.c,null,l.a.createElement(i.a,{path:\"/\",element:l.a.createElement(E,null)}),\" \",l.a.createElement(i.a,{path:\"/projects\",element:l.a.createElement(x,null)}),\" \")))}o.a.createRoot(document.getElementById(\"root\")).render(l.a.createElement(l.a.StrictMode,null,l.a.createElement(I,null))),C()},98:function(e,t,a){e.exports=a(114)}},[[98,1,2]]]);","extractedComments":[]}