{"map":"{\"version\":3,\"sources\":[\"/Users/jackzhao/Documents/ECE_461L/ReactFlaskServerSide/src/Home.js\",\"/Users/jackzhao/Documents/ECE_461L/ReactFlaskServerSide/src/Project.js\",\"/Users/jackzhao/Documents/ECE_461L/ReactFlaskServerSide/src/Resources.js\",\"/Users/jackzhao/Documents/ECE_461L/ReactFlaskServerSide/src/Projects.js\",\"/Users/jackzhao/Documents/ECE_461L/ReactFlaskServerSide/src/reportWebVitals.js\",\"/Users/jackzhao/Documents/ECE_461L/ReactFlaskServerSide/src/index.js\"],\"names\":[\"Home\",\"navigate\",\"useNavigate\",\"open\",\"setOpen\",\"useState\",\"loginUsername\",\"setLoginUsername\",\"loginUserID\",\"setLoginUserID\",\"loginPassword\",\"setLoginPassword\",\"username\",\"setUsername\",\"userID\",\"setUserID\",\"password\",\"setPassword\",\"React\",\"createElement\",\"Container\",\"maxWidth\",\"Grid\",\"container\",\"spacing\",\"item\",\"xs\",\"md\",\"Typography\",\"variant\",\"gutterBottom\",\"onSubmit\",\"async\",\"e\",\"preventDefault\",\"userInfo\",\"response\",\"fetch\",\"method\",\"headers\",\"Content-Type\",\"body\",\"JSON\",\"stringify\",\"json\",\"authentication\",\"localStorage\",\"setItem\",\"style\",\"display\",\"flexDirection\",\"gap\",\"TextField\",\"label\",\"value\",\"onChange\",\"target\",\"type\",\"Button\",\"color\",\"Snackbar\",\"autoHideDuration\",\"onClose\",\"handleClose\",\"event\",\"reason\",\"message\",\"Project\",\"_ref\",\"name\",\"members\",\"onJoinLeave\",\"joined\",\"setJoined\",\"Card\",\"sx\",\"margin\",\"CardContent\",\"justifyContent\",\"alignItems\",\"Box\",\"component\",\"map\",\"member\",\"index\",\"key\",\"onClick\",\"handleJoinLeave\",\"ResourceManagement\",\"hwResources\",\"setHwResources\",\"hwSet1\",\"capacity\",\"available\",\"hwSet2\",\"fetchResources\",\"ok\",\"data\",\"console\",\"error\",\"useEffect\",\"hwSet1Checkout\",\"setHwSet1Checkout\",\"hwSet1Checkin\",\"setHwSet1Checkin\",\"hwSet2Checkout\",\"setHwSet2Checkout\",\"hwSet2Checkin\",\"setHwSet2Checkin\",\"updateResources\",\"hwSet\",\"action\",\"quantity\",\"hwCollectionName\",\"concat\",\"Paper\",\"padding\",\"Stack\",\"fullWidth\",\"Projects\",\"projects\",\"setProjects\",\"fetchProjects\",\"getItem\",\"joinOpen\",\"setJoinOpen\",\"projectIdToJoin\",\"setProjectIdToJoin\",\"handleCloseJoinDialog\",\"flexWrap\",\"project\",\"projectName\",\"handleClickOpen\",\"Dialog\",\"DialogTitle\",\"DialogContent\",\"autoFocus\",\"id\",\"DialogActions\",\"projectInfo\",\"document\",\"getElementById\",\"description\",\"projectId\",\"projectID\",\"then\",\"handleOpenJoinDialog\",\"reportWebVitals\",\"onPerfEntry\",\"Function\",\"__webpack_require__\",\"bind\",\"getCLS\",\"getFID\",\"getFCP\",\"getLCP\",\"getTTFB\",\"Main\",\"Router\",\"Routes\",\"Route\",\"path\",\"element\",\"ReactDOM\",\"createRoot\",\"render\",\"StrictMode\"],\"mappings\":\"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\",\"sourcesContent\":[\"import './Home.css';\\nimport { Container, TextField, Button, Typography, Grid, Snackbar } from \\\"@mui/material\\\";\\nimport React, { useState } from \\\"react\\\";\\nimport {useNavigate} from \\\"react-router-dom\\\";\\n\\n\\nfunction Home() {\\n    // Used for navigating across different views/pages\\n    const navigate = useNavigate()\\n    // Initialize state of snackbar ~ material ui component that creates a pop-up\\n    const [open, setOpen] = useState(false);\\n\\n    // Initialize state of text fields\\n    const [loginUsername, setLoginUsername] = useState('');\\n    const [loginUserID, setLoginUserID] = useState('');\\n    const [loginPassword, setLoginPassword] = useState('');\\n    const [username, setUsername] = useState('');\\n    const [userID, setUserID] = useState('');\\n    const [password, setPassword] = useState('');\\n\\n\\n    // Handlers for updating the state based on user input\\n    const handleUsernameChange = (e) => setUsername(e.target.value);\\n    const handleUserIDChange = (e) => setUserID(e.target.value);\\n    const handlePasswordChange = (e) => setPassword(e.target.value);\\n\\n    const handleClose = (event, reason) => {\\n        if (reason === 'clickaway') {\\n            return;\\n        }\\n        setOpen(false);\\n    };\\n\\n\\n    //Handler for pressing login\\n    const handleLogin = async (e) => {\\n        e.preventDefault();\\n\\n        // Combine user input into a single object\\n        const userInfo = {\\n            loginUsername,\\n            loginUserID,\\n            loginPassword,\\n        };\\n\\n        // Send the information to the Flask API\\n        const response = await fetch('/login', {\\n            method: 'POST',\\n            headers: {\\n                'Content-Type': 'application/json',\\n            },\\n            body: JSON.stringify(userInfo),\\n        });\\n\\n        // Stores the json response from API\\n        const data = await response.json();\\n\\n        // Checks if user credentials are legit\\n        if(data.authentication === true){\\n            localStorage.setItem('username', loginUsername);\\n            navigate('/projects'); // Route defined in index.js\\n        } else {\\n            setOpen(true);\\n        }\\n    };\\n\\n\\n    // Handler for pressing submit\\n    const handleSubmit = async (e) => {\\n        // Prevent form from actually submitting without a chance to validate or process input before submitting it to the server\\n        e.preventDefault(); \\n\\n        // Combine user input into a single object\\n        const userInfo = {\\n            username,\\n            userID,\\n            password,\\n        };\\n\\n        // Send the information to the Flask API\\n        const response = await fetch('/createaccount', {\\n            method: 'POST',\\n            headers: {\\n                'Content-Type': 'application/json',\\n            },\\n            body: JSON.stringify(userInfo),\\n        });\\n\\n        const data = await response.json();\\n        // Handle the response data as needed\\n    };\\n\\n    return (\\n        <Container maxWidth=\\\"lg\\\">\\n            <Grid container spacing={2}>\\n                <Grid item xs={12} md={6}>\\n                    <Typography variant=\\\"h5\\\" gutterBottom>Login</Typography>\\n                    <form onSubmit={handleLogin} style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\\n                        <TextField\\n                            label=\\\"Username\\\"\\n                            variant=\\\"outlined\\\"\\n                            value={loginUsername}\\n                            onChange={(e) => setLoginUsername(e.target.value)}\\n                        />\\n                        <TextField\\n                            label=\\\"User ID\\\"\\n                            variant=\\\"outlined\\\"\\n                            value={loginUserID}\\n                            onChange={(e) => setLoginUserID(e.target.value)}\\n                        />\\n                        <TextField\\n                            label=\\\"Password\\\"\\n                            type=\\\"password\\\"\\n                            variant=\\\"outlined\\\"\\n                            value={loginPassword}\\n                            onChange={(e) => setLoginPassword(e.target.value)}\\n                        />\\n                        <Button type=\\\"submit\\\" variant=\\\"contained\\\" color=\\\"primary\\\">Login</Button>\\n                    </form>\\n                </Grid>\\n                <Grid item xs={12} md={6}>\\n                    <Typography variant=\\\"h5\\\" gutterBottom>Create Account</Typography>\\n                    <form onSubmit={handleSubmit} style={{display: 'flex', flexDirection: 'column', gap: '20px'}}>\\n                        <TextField\\n                            label=\\\"Username\\\"\\n                            variant=\\\"outlined\\\"\\n                            value={username}\\n                            onChange={handleUsernameChange}\\n                        />\\n                        <TextField\\n                            label=\\\"User ID\\\"\\n                            variant=\\\"outlined\\\"\\n                            value={userID}\\n                            onChange={handleUserIDChange}\\n                        />\\n                        <TextField\\n                            label=\\\"Password\\\"\\n                            type=\\\"password\\\"\\n                            variant=\\\"outlined\\\"\\n                            value={password}\\n                            onChange={handlePasswordChange}\\n                        />\\n                        <Button type=\\\"submit\\\" variant=\\\"contained\\\" color=\\\"primary\\\">Submit</Button>\\n                    </form>\\n                </Grid>\\n            </Grid>\\n             {/* Snackbar for showing the login error message */}\\n            <Snackbar\\n                open={open}\\n                autoHideDuration={6000}\\n                onClose={handleClose}\\n                message=\\\"Wrong Credentials. Please try again.\\\"\\n            />\\n        </Container>\\n    );\\n}\\n\\nexport default Home;\\n\\n// Below is example code from Professor \\n\\n// function Home() {\\n//     const [firstName, setFirstName] = useState(\\\"\\\")\\n//     const [lastName, getLastName] = useState(\\\"\\\")\\n//\\n//     const onClick = async(e) => {\\n//\\n//     console.log(\\\"Button was clicked\\\")\\n//\\n//     const requestOptions = {\\n//         method: \\\"GET\\\"\\n//     }\\n//\\n//\\n//\\n//         await fetch(\\\"/firstname/\\\", {\\n//             method: \\\"POST\\\",\\n//             headers: {\\\"Content-Type\\\" : \\\"application/json\\\"},\\n//             //mode: \\\"cors\\\",\\n//             body: JSON.stringify({'firstname':firstName})\\n//         })\\n//\\n//     await fetch(\\\"/lastname/\\\", requestOptions)\\n//         .then(response => response.json())\\n//         .then(data => getLastName(data.lastname))\\n//         .then(console.log(lastName));\\n//     }\\n\\n\\n//   return (\\n//     <div className=\\\"Home\\\">\\n//         <h2>Name Finder</h2>\\n//         <label>\\n//             Please enter my first name:\\n//             <br />\\n//             <input value={firstName} name=\\\"firstName\\\" onChange={e => setFirstName(e.target.value)} />\\n//             <button onClick={onClick}>Submit</button>\\n//         </label>\\n//\\n//         <br />\\n//\\n//         <p><strong>{lastName}</strong></p>\\n//     </div>\\n//   );\\n// }\",\"import React, { useEffect, useState } from 'react';\\nimport { Card, CardContent, Button, Typography, Box } from '@mui/material';\\n\\nconst Project = ({ name, members, onJoinLeave }) => {\\n  const [joined, setJoined] = useState(false);\\n\\n\\n  const handleJoinLeave = () => {\\n    setJoined(!joined);\\n    onJoinLeave(name);\\n  };\\n\\n  return (\\n    <Card variant=\\\"outlined\\\" sx={{ margin: 2 }}>\\n      <CardContent sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\\n        {/* Use Box components to group items and apply flex as needed */}\\n        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start', gap: 1 }}>\\n          <Typography variant=\\\"h5\\\" component=\\\"div\\\">\\n            {name}\\n          </Typography>\\n          {/* Map over the members array to list each member */}\\n          {members.map((member, index) => (\\n            <Typography key={index} color=\\\"text.secondary\\\">\\n              {member}\\n            </Typography>\\n          ))}\\n        </Box>\\n\\n        {/*<Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start', gap: 1 }}>*/}\\n        {/*  <Typography variant=\\\"body2\\\">*/}\\n        {/*    HWSet1: {hwSet1}*/}\\n        {/*  </Typography>*/}\\n        {/*  <Typography variant=\\\"body2\\\">*/}\\n        {/*    HWSet2: {hwSet2}*/}\\n        {/*  </Typography>*/}\\n        {/*</Box>*/}\\n\\n        <Button\\n          variant=\\\"contained\\\"\\n          color={joined ? \\\"secondary\\\" : \\\"primary\\\"}\\n          onClick={handleJoinLeave}\\n        >\\n          {joined ? \\\"Leave\\\" : \\\"Join\\\"}\\n        </Button>\\n      </CardContent>\\n    </Card>\\n  );\\n};\\n\\nexport default Project;\\n\",\"// Resources.js\\nimport React, { useEffect, useState } from 'react';\\nimport { Typography, Paper, Grid, Button, TextField, Stack} from '@mui/material';\\n\\nconst ResourceManagement = () => {\\n  const [hwResources, setHwResources] = useState({\\n    hwSet1: { capacity: '0', available: '0' },\\n    hwSet2: { capacity: '0', available: '0' }\\n  });\\n\\n  // Function to fetch resource data from the database\\n  const fetchResources = async () => {\\n    try {\\n      const response = await fetch('/get_resources');\\n      if (response.ok) {\\n        const data = await response.json();\\n        setHwResources({\\n          hwSet1: data.hwSet1,\\n          hwSet2: data.hwSet2\\n        });\\n      } else {\\n        console.error('Failed to fetch resources');\\n      }\\n    } catch (error) {\\n      console.error('Failed to fetch resources', error);\\n    }\\n  };\\n\\n  // Fetch resources when the component mounts\\n  useEffect(() => {\\n    fetchResources();\\n  }, []);\\n\\n  const [hwSet1Checkout, setHwSet1Checkout] = useState('');\\n  const [hwSet1Checkin, setHwSet1Checkin] = useState('');\\n  const [hwSet2Checkout, setHwSet2Checkout] = useState('');\\n  const [hwSet2Checkin, setHwSet2Checkin] = useState('');\\n\\n  // Function to update the hardware set availability after check-in/check-out\\nconst updateResources = async (hwSet, action, quantity) => {\\n  // Map hwSet to collection names\\n  const hwSetMapping = {\\n    'hwSet1': 'Hardware Set 1',\\n    'hwSet2': 'Hardware Set 2'\\n  };\\n  const hwCollectionName = hwSetMapping[hwSet];\\n\\n  try {\\n    const response = await fetch(`/api/hardware/${action}/${hwCollectionName}/${quantity}`, {\\n      method: 'POST',\\n      headers: { 'Content-Type': 'application/json' },\\n    });\\n    if (response.ok) {\\n      fetchResources(); // Refresh resource data\\n    } else {\\n      console.error(`Failed to ${action} hardware`);\\n    }\\n  } catch (error) {\\n    console.error('Failed to update resources', error);\\n  }\\n};\\n\\n\\n  return (\\n      <Paper style={{ margin: '20px', padding: '20px' }}>\\n    <Typography variant=\\\"h5\\\" gutterBottom>Resource Management</Typography>\\n    <Grid container spacing={2}>\\n      <Grid item xs={12} md={6}>\\n        <Typography variant=\\\"subtitle1\\\">HWSet1</Typography>\\n        <Stack spacing={2}>\\n          <Typography>Capacity: {hwResources.hwSet1.capacity}</Typography>\\n          <Typography>Available: {hwResources.hwSet1.available}</Typography>\\n          <TextField label=\\\"Checkout Quantity HWSet1\\\" value={hwSet1Checkout} onChange={e => setHwSet1Checkout(e.target.value)} type=\\\"number\\\" fullWidth />\\n          <Button variant=\\\"contained\\\" color=\\\"primary\\\" onClick={() => updateResources('hwSet1', 'checkout', hwSet1Checkout)}>Check-out HWSet1</Button>\\n          <TextField label=\\\"Check-in Quantity HWSet1\\\" value={hwSet1Checkin} onChange={e => setHwSet1Checkin(e.target.value)} type=\\\"number\\\" fullWidth />\\n          <Button variant=\\\"contained\\\" color=\\\"primary\\\" onClick={() => updateResources('hwSet1', 'checkin', hwSet1Checkin)}>Check-in HWSet1</Button>\\n        </Stack>\\n      </Grid>\\n      <Grid item xs={12} md={6}>\\n        <Typography variant=\\\"subtitle1\\\">HWSet2</Typography>\\n        <Stack spacing={2}>\\n          <Typography>Capacity: {hwResources.hwSet2.capacity}</Typography>\\n          <Typography>Available: {hwResources.hwSet2.available}</Typography>\\n          <TextField label=\\\"Checkout Quantity HWSet2\\\" value={hwSet2Checkout} onChange={e => setHwSet2Checkout(e.target.value)} type=\\\"number\\\" fullWidth />\\n          <Button variant=\\\"contained\\\" color=\\\"primary\\\" onClick={() => updateResources('hwSet2', 'checkout', hwSet2Checkout)}>Check-out HWSet2</Button>\\n          <TextField label=\\\"Check-in Quantity HWSet2\\\" value={hwSet2Checkin} onChange={e => setHwSet2Checkin(e.target.value)} type=\\\"number\\\" fullWidth />\\n          <Button variant=\\\"contained\\\" color=\\\"primary\\\" onClick={() => updateResources('hwSet2', 'checkin', hwSet2Checkin)}>Check-in HWSet2</Button>\\n        </Stack>\\n      </Grid>\\n    </Grid>\\n  </Paper>\\n  );\\n};\\n\\nexport default ResourceManagement;\\n\",\"import React, {useEffect, useState} from 'react';\\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField, Typography, Paper } from '@mui/material';\\nimport Project from './Project';\\nimport ResourceManagement from \\\"./Resources\\\"; // Assuming you have a separate Project component\\n\\nconst Projects = () => {\\n    const [open, setOpen] = useState(false);\\n    const [projects, setProjects] = useState([]);\\n\\n    const fetchProjects = async () => {\\n        const username = localStorage.getItem('username'); // Assuming username is stored in localStorage\\n        const response = await fetch(`/api/projects/${username}`);\\n        const data = await response.json();\\n        setProjects(data.projects); // Set the projects state with fetched data\\n    };\\n\\n\\n    useEffect(() => {\\n        fetchProjects(); // Call the function inside useEffect\\n    }, []);\\n\\n\\n\\n    const handleClickOpen = () => {\\n        setOpen(true);\\n    };\\n\\n    const handleClose = () => {\\n        setOpen(false);\\n    };\\n\\n    const handleSubmitProject = async () => {\\n        const loggedInUsername = localStorage.getItem('username')\\n      const projectInfo = {\\n        username: loggedInUsername,\\n        name: document.getElementById('name').value,\\n        description: document.getElementById('description').value,\\n        projectId: document.getElementById('projectID').value,\\n      };\\n\\n      await fetch(`/create_project`, {\\n        method: 'POST',\\n        headers: {\\n          'Content-Type': 'application/json',\\n        },\\n        body: JSON.stringify({ name: projectInfo.name, description: projectInfo.description, projectID: projectInfo.projectId, username: projectInfo.username }),\\n      });\\n\\n      handleClose(); // Close the dialog\\n\\n        await fetch(`/create_project`, {\\n        method: 'POST',\\n        headers: {\\n          'Content-Type': 'application/json',\\n        },\\n        body: JSON.stringify({ name: projectInfo.name, description: projectInfo.description, projectID: projectInfo.projectId, username: projectInfo.username }),\\n        }).then(response => {\\n        if(response.ok) {\\n          fetchProjects(); // Refresh projects list\\n          handleClose(); // Close the dialog\\n        } else {\\n          console.error('Failed to create project');\\n        }\\n      });\\n    };\\n\\n    // const handleSubmitProject = async () => {\\n    //     const loggedInUsername = localStorage.getItem('username');\\n    //     const projectInfo = {\\n    //         username: loggedInUsername,\\n    //         name: document.getElementById('name').value,\\n    //         description: document.getElementById('description').value,\\n    //         projectId: document.getElementById('projectID').value,\\n    //     };\\n    //\\n    //     const response = await fetch(`/create_project`, {\\n    //         method: 'POST',\\n    //         headers: {\\n    //             'Content-Type': 'application/json',\\n    //         },\\n    //         body: JSON.stringify(projectInfo),\\n    //     });\\n    //\\n    //     if(response.ok) {\\n    //         fetchProjects(); // This ensures the project list is updated\\n    //         handleClose(); // Closes the dialog after submission\\n    //     } else {\\n    //         console.error('Failed to create project');\\n    //     }\\n    // };\\n\\n\\n  const handleJoinLeaveProject = (projectName) => {\\n    console.log(`${projectName} join/leave clicked`);\\n    // Logic to handle join/leave\\n  };\\n\\n\\n  // Additional state hooks for join project dialog\\nconst [joinOpen, setJoinOpen] = useState(false);\\nconst [projectIdToJoin, setProjectIdToJoin] = useState('');\\n\\n// Function to handle opening the join project dialog\\nconst handleOpenJoinDialog = () => setJoinOpen(true);\\n\\n// Function to handle closing the join project dialog\\nconst handleCloseJoinDialog = () => setJoinOpen(false);\\n  // Function to handle the join project submit action\\nconst handleJoinProjectSubmit = async () => {\\n    const username = localStorage.getItem('username');\\n    await fetch('/join_project', {\\n        method: 'POST',\\n        headers: { 'Content-Type': 'application/json' },\\n        body: JSON.stringify({ projectId: projectIdToJoin, username: username }),\\n    });\\n    // Assume fetchProjects is a function that fetches updated project list\\n    fetchProjects();\\n    setJoinOpen(false);\\n};\\n\\n  return (\\n      <div style={{padding: 20}}>\\n          <Typography variant=\\\"h4\\\" gutterBottom>\\n              Projects\\n          </Typography>\\n          <div style={{\\n              display: 'flex',\\n              flexDirection: 'column',\\n              flexWrap: 'wrap',\\n              gap: '20px',\\n              justifyContent: 'center'\\n          }}>\\n              {projects.map((project, index) => (\\n                  <Project\\n                      key = {index}\\n                      name = {project.projectName}\\n                      members = {project.members}\\n                  />\\n              ))}\\n          </div>\\n          <Button variant=\\\"outlined\\\" onClick={handleClickOpen}>Create Project</Button>\\n          <Dialog open={open} onClose={handleClose}>\\n              <DialogTitle>Create a New Project</DialogTitle>\\n              <DialogContent>\\n                  <TextField autoFocus margin=\\\"dense\\\" id=\\\"name\\\" label=\\\"Project Name\\\" type=\\\"text\\\" fullWidth/>\\n                  <TextField margin=\\\"dense\\\" id=\\\"description\\\" label=\\\"Description\\\" type=\\\"text\\\" fullWidth/>\\n                  <TextField margin=\\\"dense\\\" id=\\\"projectID\\\" label=\\\"Project ID\\\" type=\\\"text\\\" fullWidth/>\\n              </DialogContent>\\n              <DialogActions>\\n                  <Button onClick={handleClose}>Cancel</Button>\\n                  <Button onClick={handleSubmitProject}>Submit</Button>\\n              </DialogActions>\\n          </Dialog>\\n    <Button variant=\\\"outlined\\\" onClick={handleOpenJoinDialog}>Join Project</Button>\\n    <Dialog open={joinOpen} onClose={handleCloseJoinDialog}>\\n        <DialogTitle>Join a Project</DialogTitle>\\n        <DialogContent>\\n            <TextField\\n                autoFocus\\n                margin=\\\"dense\\\"\\n                id=\\\"joinProjectId\\\"\\n                label=\\\"Project ID\\\"\\n                type=\\\"text\\\"\\n                fullWidth\\n                value={projectIdToJoin}\\n                onChange={(e) => setProjectIdToJoin(e.target.value)}\\n            />\\n        </DialogContent>\\n        <DialogActions>\\n            <Button onClick={handleCloseJoinDialog}>Cancel</Button>\\n            <Button onClick={handleJoinProjectSubmit}>Join</Button>\\n        </DialogActions>\\n    </Dialog>\\n          <ResourceManagement /> {/* Use the Resource Management component */}\\n      </div>\\n  );\\n};\\n\\nexport default Projects;\\n\",\"const reportWebVitals = onPerfEntry => {\\n  if (onPerfEntry && onPerfEntry instanceof Function) {\\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\\n      getCLS(onPerfEntry);\\n      getFID(onPerfEntry);\\n      getFCP(onPerfEntry);\\n      getLCP(onPerfEntry);\\n      getTTFB(onPerfEntry);\\n    });\\n  }\\n};\\n\\nexport default reportWebVitals;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\\nimport './index.css';\\nimport Home from './Home';\\nimport Projects from './Projects';\\nimport reportWebVitals from './reportWebVitals';\\n\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\nroot.render(\\n  <React.StrictMode>\\n    <Main />\\n  </React.StrictMode>\\n);\\n\\n\\nfunction Main() {\\n  return (\\n    <Router>\\n      <div>\\n        {/* Define your routes here */}\\n        <Routes>\\n          <Route path=\\\"/\\\" element={<Home />} /> {/* Main entry or home page */}\\n          <Route path=\\\"/projects\\\" element={<Projects />} /> {/* Route to list projects */}\\n          {/* Example: <Route path=\\\"/projects/:projectId\\\" element={<Project />} /> */}\\n        </Routes>\\n      </div>\\n    </Router>\\n  );\\n}\\n\\n// If you want to start measuring performance in your app, pass a function\\n// to log results (for example: reportWebVitals(console.log))\\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\\nreportWebVitals();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{107:function(e,t,a){},108:function(e,t,a){},115:function(e,t,a){\"use strict\";a.r(t);var n=a(0),r=a.n(n),c=a(82),l=a.n(c),o=a(66),i=a(5),m=(a(107),a(108),a(175)),s=a(172),u=a(124),p=a(167),d=a(168),h=a(170);var E=function(){const e=Object(i.o)(),[t,a]=Object(n.useState)(!1),[c,l]=Object(n.useState)(\"\"),[o,E]=Object(n.useState)(\"\"),[g,y]=Object(n.useState)(\"\"),[v,S]=Object(n.useState)(\"\"),[b,j]=Object(n.useState)(\"\"),[f,C]=Object(n.useState)(\"\");return r.a.createElement(m.a,{maxWidth:\"lg\"},r.a.createElement(s.a,{container:!0,spacing:2},r.a.createElement(s.a,{item:!0,xs:12,md:6},r.a.createElement(u.a,{variant:\"h5\",gutterBottom:!0},\"Login\"),r.a.createElement(\"form\",{onSubmit:async t=>{t.preventDefault();const n={loginUsername:c,loginUserID:o,loginPassword:g},r=await fetch(\"/login\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(n)});!0===(await r.json()).authentication?(localStorage.setItem(\"username\",c),e(\"/projects\")):a(!0)},style:{display:\"flex\",flexDirection:\"column\",gap:\"20px\"}},r.a.createElement(p.a,{label:\"Username\",variant:\"outlined\",value:c,onChange:e=>l(e.target.value)}),r.a.createElement(p.a,{label:\"User ID\",variant:\"outlined\",value:o,onChange:e=>E(e.target.value)}),r.a.createElement(p.a,{label:\"Password\",type:\"password\",variant:\"outlined\",value:g,onChange:e=>y(e.target.value)}),r.a.createElement(d.a,{type:\"submit\",variant:\"contained\",color:\"primary\"},\"Login\"))),r.a.createElement(s.a,{item:!0,xs:12,md:6},r.a.createElement(u.a,{variant:\"h5\",gutterBottom:!0},\"Create Account\"),r.a.createElement(\"form\",{onSubmit:async e=>{e.preventDefault();const t={username:v,userID:b,password:f},a=await fetch(\"/createaccount\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(t)});await a.json()},style:{display:\"flex\",flexDirection:\"column\",gap:\"20px\"}},r.a.createElement(p.a,{label:\"Username\",variant:\"outlined\",value:v,onChange:e=>S(e.target.value)}),r.a.createElement(p.a,{label:\"User ID\",variant:\"outlined\",value:b,onChange:e=>j(e.target.value)}),r.a.createElement(p.a,{label:\"Password\",type:\"password\",variant:\"outlined\",value:f,onChange:e=>C(e.target.value)}),r.a.createElement(d.a,{type:\"submit\",variant:\"contained\",color:\"primary\"},\"Submit\")))),r.a.createElement(h.a,{open:t,autoHideDuration:6e3,onClose:(e,t)=>{\"clickaway\"!==t&&a(!1)},message:\"Wrong Credentials. Please try again.\"}))},g=a(180),y=a(166),v=a(181),S=a(182),b=a(177),j=a(178),f=a(174);var C=e=>{let{name:t,members:a,onJoinLeave:c}=e;const[l,o]=Object(n.useState)(!1);return r.a.createElement(b.a,{variant:\"outlined\",sx:{margin:2}},r.a.createElement(j.a,{sx:{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"}},r.a.createElement(f.a,{sx:{display:\"flex\",flexDirection:\"column\",alignItems:\"flex-start\",gap:1}},r.a.createElement(u.a,{variant:\"h5\",component:\"div\"},t),a.map((e,t)=>r.a.createElement(u.a,{key:t,color:\"text.secondary\"},e))),r.a.createElement(d.a,{variant:\"contained\",color:l?\"secondary\":\"primary\",onClick:()=>{o(!l),c(t)}},l?\"Leave\":\"Join\")))},w=a(173),k=a(179);var O=()=>{const[e,t]=Object(n.useState)({hwSet1:{capacity:\"0\",available:\"0\"},hwSet2:{capacity:\"0\",available:\"0\"}}),a=async()=>{try{const a=await fetch(\"/get_resources\");if(a.ok){const e=await a.json();t({hwSet1:e.hwSet1,hwSet2:e.hwSet2})}else console.error(\"Failed to fetch resources\")}catch(e){console.error(\"Failed to fetch resources\",e)}};Object(n.useEffect)(()=>{a()},[]);const[c,l]=Object(n.useState)(\"\"),[o,i]=Object(n.useState)(\"\"),[m,h]=Object(n.useState)(\"\"),[E,g]=Object(n.useState)(\"\"),y=async(e,t,n)=>{const r={hwSet1:\"Hardware Set 1\",hwSet2:\"Hardware Set 2\"}[e];try{(await fetch(\"/api/hardware/\".concat(t,\"/\").concat(r,\"/\").concat(n),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"}})).ok?a():console.error(\"Failed to \".concat(t,\" hardware\"))}catch(c){console.error(\"Failed to update resources\",c)}};return r.a.createElement(w.a,{style:{margin:\"20px\",padding:\"20px\"}},r.a.createElement(u.a,{variant:\"h5\",gutterBottom:!0},\"Resource Management\"),r.a.createElement(s.a,{container:!0,spacing:2},r.a.createElement(s.a,{item:!0,xs:12,md:6},r.a.createElement(u.a,{variant:\"subtitle1\"},\"HWSet1\"),r.a.createElement(k.a,{spacing:2},r.a.createElement(u.a,null,\"Capacity: \",e.hwSet1.capacity),r.a.createElement(u.a,null,\"Available: \",e.hwSet1.available),r.a.createElement(p.a,{label:\"Checkout Quantity HWSet1\",value:c,onChange:e=>l(e.target.value),type:\"number\",fullWidth:!0}),r.a.createElement(d.a,{variant:\"contained\",color:\"primary\",onClick:()=>y(\"hwSet1\",\"checkout\",c)},\"Check-out HWSet1\"),r.a.createElement(p.a,{label:\"Check-in Quantity HWSet1\",value:o,onChange:e=>i(e.target.value),type:\"number\",fullWidth:!0}),r.a.createElement(d.a,{variant:\"contained\",color:\"primary\",onClick:()=>y(\"hwSet1\",\"checkin\",o)},\"Check-in HWSet1\"))),r.a.createElement(s.a,{item:!0,xs:12,md:6},r.a.createElement(u.a,{variant:\"subtitle1\"},\"HWSet2\"),r.a.createElement(k.a,{spacing:2},r.a.createElement(u.a,null,\"Capacity: \",e.hwSet2.capacity),r.a.createElement(u.a,null,\"Available: \",e.hwSet2.available),r.a.createElement(p.a,{label:\"Checkout Quantity HWSet2\",value:m,onChange:e=>h(e.target.value),type:\"number\",fullWidth:!0}),r.a.createElement(d.a,{variant:\"contained\",color:\"primary\",onClick:()=>y(\"hwSet2\",\"checkout\",m)},\"Check-out HWSet2\"),r.a.createElement(p.a,{label:\"Check-in Quantity HWSet2\",value:E,onChange:e=>g(e.target.value),type:\"number\",fullWidth:!0}),r.a.createElement(d.a,{variant:\"contained\",color:\"primary\",onClick:()=>y(\"hwSet2\",\"checkin\",E)},\"Check-in HWSet2\")))))};var x=()=>{const[e,t]=Object(n.useState)(!1),[a,c]=Object(n.useState)([]),l=async()=>{const e=localStorage.getItem(\"username\"),t=await fetch(\"/api/projects/\".concat(e)),a=await t.json();c(a.projects)};Object(n.useEffect)(()=>{l()},[]);const o=()=>{t(!1)},[i,m]=Object(n.useState)(!1),[s,h]=Object(n.useState)(\"\"),E=()=>m(!1);return r.a.createElement(\"div\",{style:{padding:20}},r.a.createElement(u.a,{variant:\"h4\",gutterBottom:!0},\"Projects\"),r.a.createElement(\"div\",{style:{display:\"flex\",flexDirection:\"column\",flexWrap:\"wrap\",gap:\"20px\",justifyContent:\"center\"}},a.map((e,t)=>r.a.createElement(C,{key:t,name:e.projectName,members:e.members}))),r.a.createElement(d.a,{variant:\"outlined\",onClick:()=>{t(!0)}},\"Create Project\"),r.a.createElement(g.a,{open:e,onClose:o},r.a.createElement(y.a,null,\"Create a New Project\"),r.a.createElement(v.a,null,r.a.createElement(p.a,{autoFocus:!0,margin:\"dense\",id:\"name\",label:\"Project Name\",type:\"text\",fullWidth:!0}),r.a.createElement(p.a,{margin:\"dense\",id:\"description\",label:\"Description\",type:\"text\",fullWidth:!0}),r.a.createElement(p.a,{margin:\"dense\",id:\"projectID\",label:\"Project ID\",type:\"text\",fullWidth:!0})),r.a.createElement(S.a,null,r.a.createElement(d.a,{onClick:o},\"Cancel\"),r.a.createElement(d.a,{onClick:async()=>{const e={username:localStorage.getItem(\"username\"),name:document.getElementById(\"name\").value,description:document.getElementById(\"description\").value,projectId:document.getElementById(\"projectID\").value};await fetch(\"/create_project\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({name:e.name,description:e.description,projectID:e.projectId,username:e.username})}),o(),await fetch(\"/create_project\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({name:e.name,description:e.description,projectID:e.projectId,username:e.username})}).then(e=>{e.ok?(l(),o()):console.error(\"Failed to create project\")})}},\"Submit\"))),r.a.createElement(d.a,{variant:\"outlined\",onClick:()=>m(!0)},\"Join Project\"),r.a.createElement(g.a,{open:i,onClose:E},r.a.createElement(y.a,null,\"Join a Project\"),r.a.createElement(v.a,null,r.a.createElement(p.a,{autoFocus:!0,margin:\"dense\",id:\"joinProjectId\",label:\"Project ID\",type:\"text\",fullWidth:!0,value:s,onChange:e=>h(e.target.value)})),r.a.createElement(S.a,null,r.a.createElement(d.a,{onClick:E},\"Cancel\"),r.a.createElement(d.a,{onClick:async()=>{const e=localStorage.getItem(\"username\");await fetch(\"/join_project\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({projectId:s,username:e})}),l(),m(!1)}},\"Join\"))),r.a.createElement(O,null),\" \")};var I=e=>{e&&e instanceof Function&&a.e(3).then(a.bind(null,183)).then(t=>{let{getCLS:a,getFID:n,getFCP:r,getLCP:c,getTTFB:l}=t;a(e),n(e),r(e),c(e),l(e)})};function P(){return r.a.createElement(o.a,null,r.a.createElement(\"div\",null,r.a.createElement(i.c,null,r.a.createElement(i.a,{path:\"/\",element:r.a.createElement(E,null)}),\" \",r.a.createElement(i.a,{path:\"/projects\",element:r.a.createElement(x,null)}),\" \")))}l.a.createRoot(document.getElementById(\"root\")).render(r.a.createElement(r.a.StrictMode,null,r.a.createElement(P,null))),I()},99:function(e,t,a){e.exports=a(115)}},[[99,1,2]]]);","extractedComments":[]}