{"map":"{\"version\":3,\"sources\":[\"/Users/jackzhao/Documents/ECE_461L/ReactFlaskServerSide/src/Home.js\",\"/Users/jackzhao/Documents/ECE_461L/ReactFlaskServerSide/src/Project.js\",\"/Users/jackzhao/Documents/ECE_461L/ReactFlaskServerSide/src/Resources.js\",\"/Users/jackzhao/Documents/ECE_461L/ReactFlaskServerSide/src/Projects.js\",\"/Users/jackzhao/Documents/ECE_461L/ReactFlaskServerSide/src/reportWebVitals.js\",\"/Users/jackzhao/Documents/ECE_461L/ReactFlaskServerSide/src/index.js\"],\"names\":[\"Home\",\"navigate\",\"useNavigate\",\"open\",\"setOpen\",\"useState\",\"loginUsername\",\"setLoginUsername\",\"loginUserID\",\"setLoginUserID\",\"loginPassword\",\"setLoginPassword\",\"username\",\"setUsername\",\"userID\",\"setUserID\",\"password\",\"setPassword\",\"React\",\"createElement\",\"Container\",\"maxWidth\",\"Grid\",\"container\",\"spacing\",\"item\",\"xs\",\"md\",\"Typography\",\"variant\",\"gutterBottom\",\"onSubmit\",\"async\",\"e\",\"preventDefault\",\"userInfo\",\"response\",\"fetch\",\"method\",\"headers\",\"Content-Type\",\"body\",\"JSON\",\"stringify\",\"json\",\"authentication\",\"localStorage\",\"setItem\",\"style\",\"display\",\"flexDirection\",\"gap\",\"TextField\",\"label\",\"value\",\"onChange\",\"target\",\"type\",\"Button\",\"color\",\"Snackbar\",\"autoHideDuration\",\"onClose\",\"handleClose\",\"event\",\"reason\",\"message\",\"Project\",\"_ref\",\"name\",\"members\",\"onJoinLeave\",\"joined\",\"setJoined\",\"Card\",\"sx\",\"margin\",\"CardContent\",\"justifyContent\",\"alignItems\",\"Box\",\"component\",\"map\",\"member\",\"index\",\"key\",\"onClick\",\"handleJoinLeave\",\"ResourceManagement\",\"hwResources\",\"setHwResources\",\"hwSet1\",\"capacity\",\"available\",\"hwSet2\",\"useEffect\",\"ok\",\"data\",\"console\",\"error\",\"fetchResources\",\"Paper\",\"padding\",\"Projects\",\"projects\",\"setProjects\",\"fetchProjects\",\"getItem\",\"concat\",\"joinOpen\",\"setJoinOpen\",\"projectIdToJoin\",\"setProjectIdToJoin\",\"handleCloseJoinDialog\",\"flexWrap\",\"project\",\"projectName\",\"handleClickOpen\",\"Dialog\",\"DialogTitle\",\"DialogContent\",\"autoFocus\",\"id\",\"fullWidth\",\"DialogActions\",\"projectInfo\",\"document\",\"getElementById\",\"description\",\"projectId\",\"projectID\",\"then\",\"handleOpenJoinDialog\",\"reportWebVitals\",\"onPerfEntry\",\"Function\",\"__webpack_require__\",\"bind\",\"getCLS\",\"getFID\",\"getFCP\",\"getLCP\",\"getTTFB\",\"Main\",\"Router\",\"Routes\",\"Route\",\"path\",\"element\",\"ReactDOM\",\"createRoot\",\"render\",\"StrictMode\"],\"mappings\":\"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\",\"sourcesContent\":[\"import './Home.css';\\nimport { Container, TextField, Button, Typography, Grid, Snackbar } from \\\"@mui/material\\\";\\nimport React, { useState } from \\\"react\\\";\\nimport {useNavigate} from \\\"react-router-dom\\\";\\n\\n\\nfunction Home() {\\n    // Used for navigating across different views/pages\\n    const navigate = useNavigate()\\n    // Initialize state of snackbar ~ material ui component that creates a pop-up\\n    const [open, setOpen] = useState(false);\\n\\n    // Initialize state of text fields\\n    const [loginUsername, setLoginUsername] = useState('');\\n    const [loginUserID, setLoginUserID] = useState('');\\n    const [loginPassword, setLoginPassword] = useState('');\\n    const [username, setUsername] = useState('');\\n    const [userID, setUserID] = useState('');\\n    const [password, setPassword] = useState('');\\n\\n\\n    // Handlers for updating the state based on user input\\n    const handleUsernameChange = (e) => setUsername(e.target.value);\\n    const handleUserIDChange = (e) => setUserID(e.target.value);\\n    const handlePasswordChange = (e) => setPassword(e.target.value);\\n\\n    const handleClose = (event, reason) => {\\n        if (reason === 'clickaway') {\\n            return;\\n        }\\n        setOpen(false);\\n    };\\n\\n\\n    //Handler for pressing login\\n    const handleLogin = async (e) => {\\n        e.preventDefault();\\n\\n        // Combine user input into a single object\\n        const userInfo = {\\n            loginUsername,\\n            loginUserID,\\n            loginPassword,\\n        };\\n\\n        // Send the information to the Flask API\\n        const response = await fetch('/login', {\\n            method: 'POST',\\n            headers: {\\n                'Content-Type': 'application/json',\\n            },\\n            body: JSON.stringify(userInfo),\\n        });\\n\\n        // Stores the json response from API\\n        const data = await response.json();\\n\\n        // Checks if user credentials are legit\\n        if(data.authentication === true){\\n            localStorage.setItem('username', loginUsername);\\n            navigate('/projects'); // Route defined in index.js\\n        } else {\\n            setOpen(true);\\n        }\\n    };\\n\\n\\n    // Handler for pressing submit\\n    const handleSubmit = async (e) => {\\n        // Prevent form from actually submitting without a chance to validate or process input before submitting it to the server\\n        e.preventDefault(); \\n\\n        // Combine user input into a single object\\n        const userInfo = {\\n            username,\\n            userID,\\n            password,\\n        };\\n\\n        // Send the information to the Flask API\\n        const response = await fetch('/createaccount', {\\n            method: 'POST',\\n            headers: {\\n                'Content-Type': 'application/json',\\n            },\\n            body: JSON.stringify(userInfo),\\n        });\\n\\n        const data = await response.json();\\n        // Handle the response data as needed\\n    };\\n\\n    return (\\n        <Container maxWidth=\\\"lg\\\">\\n            <Grid container spacing={2}>\\n                <Grid item xs={12} md={6}>\\n                    <Typography variant=\\\"h5\\\" gutterBottom>Login</Typography>\\n                    <form onSubmit={handleLogin} style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\\n                        <TextField\\n                            label=\\\"Username\\\"\\n                            variant=\\\"outlined\\\"\\n                            value={loginUsername}\\n                            onChange={(e) => setLoginUsername(e.target.value)}\\n                        />\\n                        <TextField\\n                            label=\\\"User ID\\\"\\n                            variant=\\\"outlined\\\"\\n                            value={loginUserID}\\n                            onChange={(e) => setLoginUserID(e.target.value)}\\n                        />\\n                        <TextField\\n                            label=\\\"Password\\\"\\n                            type=\\\"password\\\"\\n                            variant=\\\"outlined\\\"\\n                            value={loginPassword}\\n                            onChange={(e) => setLoginPassword(e.target.value)}\\n                        />\\n                        <Button type=\\\"submit\\\" variant=\\\"contained\\\" color=\\\"primary\\\">Login</Button>\\n                    </form>\\n                </Grid>\\n                <Grid item xs={12} md={6}>\\n                    <Typography variant=\\\"h5\\\" gutterBottom>Create Account</Typography>\\n                    <form onSubmit={handleSubmit} style={{display: 'flex', flexDirection: 'column', gap: '20px'}}>\\n                        <TextField\\n                            label=\\\"Username\\\"\\n                            variant=\\\"outlined\\\"\\n                            value={username}\\n                            onChange={handleUsernameChange}\\n                        />\\n                        <TextField\\n                            label=\\\"User ID\\\"\\n                            variant=\\\"outlined\\\"\\n                            value={userID}\\n                            onChange={handleUserIDChange}\\n                        />\\n                        <TextField\\n                            label=\\\"Password\\\"\\n                            type=\\\"password\\\"\\n                            variant=\\\"outlined\\\"\\n                            value={password}\\n                            onChange={handlePasswordChange}\\n                        />\\n                        <Button type=\\\"submit\\\" variant=\\\"contained\\\" color=\\\"primary\\\">Submit</Button>\\n                    </form>\\n                </Grid>\\n            </Grid>\\n             {/* Snackbar for showing the login error message */}\\n            <Snackbar\\n                open={open}\\n                autoHideDuration={6000}\\n                onClose={handleClose}\\n                message=\\\"Wrong Credentials. Please try again.\\\"\\n            />\\n        </Container>\\n    );\\n}\\n\\nexport default Home;\\n\\n// Below is example code from Professor \\n\\n// function Home() {\\n//     const [firstName, setFirstName] = useState(\\\"\\\")\\n//     const [lastName, getLastName] = useState(\\\"\\\")\\n//\\n//     const onClick = async(e) => {\\n//\\n//     console.log(\\\"Button was clicked\\\")\\n//\\n//     const requestOptions = {\\n//         method: \\\"GET\\\"\\n//     }\\n//\\n//\\n//\\n//         await fetch(\\\"/firstname/\\\", {\\n//             method: \\\"POST\\\",\\n//             headers: {\\\"Content-Type\\\" : \\\"application/json\\\"},\\n//             //mode: \\\"cors\\\",\\n//             body: JSON.stringify({'firstname':firstName})\\n//         })\\n//\\n//     await fetch(\\\"/lastname/\\\", requestOptions)\\n//         .then(response => response.json())\\n//         .then(data => getLastName(data.lastname))\\n//         .then(console.log(lastName));\\n//     }\\n\\n\\n//   return (\\n//     <div className=\\\"Home\\\">\\n//         <h2>Name Finder</h2>\\n//         <label>\\n//             Please enter my first name:\\n//             <br />\\n//             <input value={firstName} name=\\\"firstName\\\" onChange={e => setFirstName(e.target.value)} />\\n//             <button onClick={onClick}>Submit</button>\\n//         </label>\\n//\\n//         <br />\\n//\\n//         <p><strong>{lastName}</strong></p>\\n//     </div>\\n//   );\\n// }\",\"import React, { useEffect, useState } from 'react';\\nimport { Card, CardContent, Button, Typography, Box } from '@mui/material';\\n\\nconst Project = ({ name, members, onJoinLeave }) => {\\n  const [joined, setJoined] = useState(false);\\n\\n\\n  const handleJoinLeave = () => {\\n    setJoined(!joined);\\n    onJoinLeave(name);\\n  };\\n\\n  return (\\n    <Card variant=\\\"outlined\\\" sx={{ margin: 2 }}>\\n      <CardContent sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\\n        {/* Use Box components to group items and apply flex as needed */}\\n        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start', gap: 1 }}>\\n          <Typography variant=\\\"h5\\\" component=\\\"div\\\">\\n            {name}\\n          </Typography>\\n          {/* Map over the members array to list each member */}\\n          {members.map((member, index) => (\\n            <Typography key={index} color=\\\"text.secondary\\\">\\n              {member}\\n            </Typography>\\n          ))}\\n        </Box>\\n\\n        {/*<Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start', gap: 1 }}>*/}\\n        {/*  <Typography variant=\\\"body2\\\">*/}\\n        {/*    HWSet1: {hwSet1}*/}\\n        {/*  </Typography>*/}\\n        {/*  <Typography variant=\\\"body2\\\">*/}\\n        {/*    HWSet2: {hwSet2}*/}\\n        {/*  </Typography>*/}\\n        {/*</Box>*/}\\n\\n        <Button\\n          variant=\\\"contained\\\"\\n          color={joined ? \\\"secondary\\\" : \\\"primary\\\"}\\n          onClick={handleJoinLeave}\\n        >\\n          {joined ? \\\"Leave\\\" : \\\"Join\\\"}\\n        </Button>\\n      </CardContent>\\n    </Card>\\n  );\\n};\\n\\nexport default Project;\\n\",\"// Resources.js\\nimport React, { useEffect, useState } from 'react';\\nimport { Typography, Paper, Grid, Button } from '@mui/material';\\n\\nconst ResourceManagement = () => {\\n  const [hwResources, setHwResources] = useState({\\n    hwSet1: { capacity: '0', available: '0' },\\n    hwSet2: { capacity: '0', available: '0' }\\n  });\\n\\n  // Function to fetch resource data from the database\\n  const fetchResources = async () => {\\n    try {\\n      const response = await fetch('/get_resources');\\n      if (response.ok) {\\n        const data = await response.json();\\n        setHwResources({\\n          hwSet1: data.hwSet1,\\n          hwSet2: data.hwSet2\\n        });\\n      } else {\\n        console.error('Failed to fetch resources');\\n      }\\n    } catch (error) {\\n      console.error('Failed to fetch resources', error);\\n    }\\n  };\\n\\n  // Fetch resources when the component mounts\\n  useEffect(() => {\\n    fetchResources();\\n  }, []);\\n\\n  // Handlers for checkin and checkout actions...\\n  // Implement these functions to make POST requests to your backend to update resources\\n\\n  // ...\\n\\n  return (\\n    <Paper style={{ margin: '20px', padding: '20px' }}>\\n      <Typography variant=\\\"h5\\\" gutterBottom>\\n        Resource Management\\n      </Typography>\\n      <Grid container spacing={2}>\\n        {/* Display for HWSet1 */}\\n        <Grid item xs={4}>\\n          <Typography>HWSet1 Capacity: {hwResources.hwSet1.capacity}</Typography>\\n          <Typography>HWSet1 Available: {hwResources.hwSet1.available}</Typography>\\n          {/* Inputs to check in/out HWSet1 */}\\n          {/* ...additional UI components as needed */}\\n        </Grid>\\n        {/* Display for HWSet2 */}\\n        <Grid item xs={4}>\\n          <Typography>HWSet2 Capacity: {hwResources.hwSet2.capacity}</Typography>\\n          <Typography>HWSet2 Available: {hwResources.hwSet2.available}</Typography>\\n          {/* Inputs to check in/out HWSet2 */}\\n          {/* ...additional UI components as needed */}\\n        </Grid>\\n        {/* Actions (check-in/check-out buttons) */}\\n        <Grid item xs={4}>\\n          <Button variant=\\\"contained\\\" color=\\\"primary\\\">\\n            Check-in\\n          </Button>\\n          <Button variant=\\\"contained\\\" color=\\\"primary\\\">\\n            Check-out\\n          </Button>\\n        </Grid>\\n      </Grid>\\n    </Paper>\\n  );\\n};\\n\\nexport default ResourceManagement;\\n\",\"import React, {useEffect, useState} from 'react';\\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField, Typography, Paper } from '@mui/material';\\nimport Project from './Project';\\nimport ResourceManagement from \\\"./Resources\\\"; // Assuming you have a separate Project component\\n\\nconst Projects = () => {\\n    const [open, setOpen] = useState(false);\\n    const [projects, setProjects] = useState([]);\\n\\n    const fetchProjects = async () => {\\n        const username = localStorage.getItem('username'); // Assuming username is stored in localStorage\\n        const response = await fetch(`/api/projects/${username}`);\\n        const data = await response.json();\\n        setProjects(data.projects); // Set the projects state with fetched data\\n    };\\n\\n\\n    useEffect(() => {\\n        fetchProjects(); // Call the function inside useEffect\\n    }, []);\\n\\n\\n\\n    const handleClickOpen = () => {\\n        setOpen(true);\\n    };\\n\\n    const handleClose = () => {\\n        setOpen(false);\\n    };\\n\\n    const handleSubmitProject = async () => {\\n        const loggedInUsername = localStorage.getItem('username')\\n      const projectInfo = {\\n        username: loggedInUsername,\\n        name: document.getElementById('name').value,\\n        description: document.getElementById('description').value,\\n        projectId: document.getElementById('projectID').value,\\n      };\\n\\n      await fetch(`/create_project`, {\\n        method: 'POST',\\n        headers: {\\n          'Content-Type': 'application/json',\\n        },\\n        body: JSON.stringify({ name: projectInfo.name, description: projectInfo.description, projectID: projectInfo.projectId, username: projectInfo.username }),\\n      });\\n\\n      handleClose(); // Close the dialog\\n\\n        await fetch(`/create_project`, {\\n        method: 'POST',\\n        headers: {\\n          'Content-Type': 'application/json',\\n        },\\n        body: JSON.stringify({ name: projectInfo.name, description: projectInfo.description, projectID: projectInfo.projectId, username: projectInfo.username }),\\n        }).then(response => {\\n        if(response.ok) {\\n          fetchProjects(); // Refresh projects list\\n          handleClose(); // Close the dialog\\n        } else {\\n          console.error('Failed to create project');\\n        }\\n      });\\n    };\\n\\n\\n  const handleJoinLeaveProject = (projectName) => {\\n    console.log(`${projectName} join/leave clicked`);\\n    // Logic to handle join/leave\\n  };\\n\\n\\n  // Additional state hooks for join project dialog\\nconst [joinOpen, setJoinOpen] = useState(false);\\nconst [projectIdToJoin, setProjectIdToJoin] = useState('');\\n\\n// Function to handle opening the join project dialog\\nconst handleOpenJoinDialog = () => setJoinOpen(true);\\n\\n// Function to handle closing the join project dialog\\nconst handleCloseJoinDialog = () => setJoinOpen(false);\\n  // Function to handle the join project submit action\\nconst handleJoinProjectSubmit = async () => {\\n    const username = localStorage.getItem('username');\\n    await fetch('/join_project', {\\n        method: 'POST',\\n        headers: { 'Content-Type': 'application/json' },\\n        body: JSON.stringify({ projectId: projectIdToJoin, username: username }),\\n    });\\n    // Assume fetchProjects is a function that fetches updated project list\\n    fetchProjects();\\n    setJoinOpen(false);\\n};\\n\\n  return (\\n      <div style={{padding: 20}}>\\n          <Typography variant=\\\"h4\\\" gutterBottom>\\n              Projects\\n          </Typography>\\n          <div style={{\\n              display: 'flex',\\n              flexDirection: 'column',\\n              flexWrap: 'wrap',\\n              gap: '20px',\\n              justifyContent: 'center'\\n          }}>\\n              {projects.map((project, index) => (\\n                  <Project\\n                      key = {index}\\n                      name = {project.projectName}\\n                      members = {project.members}\\n                  />\\n              ))}\\n          </div>\\n          <Button variant=\\\"outlined\\\" onClick={handleClickOpen}>Create Project</Button>\\n          <Dialog open={open} onClose={handleClose}>\\n              <DialogTitle>Create a New Project</DialogTitle>\\n              <DialogContent>\\n                  <TextField autoFocus margin=\\\"dense\\\" id=\\\"name\\\" label=\\\"Project Name\\\" type=\\\"text\\\" fullWidth/>\\n                  <TextField margin=\\\"dense\\\" id=\\\"description\\\" label=\\\"Description\\\" type=\\\"text\\\" fullWidth/>\\n                  <TextField margin=\\\"dense\\\" id=\\\"projectID\\\" label=\\\"Project ID\\\" type=\\\"text\\\" fullWidth/>\\n              </DialogContent>\\n              <DialogActions>\\n                  <Button onClick={handleClose}>Cancel</Button>\\n                  <Button onClick={handleSubmitProject}>Submit</Button>\\n              </DialogActions>\\n          </Dialog>\\n    <Button variant=\\\"outlined\\\" onClick={handleOpenJoinDialog}>Join Project</Button>\\n    <Dialog open={joinOpen} onClose={handleCloseJoinDialog}>\\n        <DialogTitle>Join a Project</DialogTitle>\\n        <DialogContent>\\n            <TextField\\n                autoFocus\\n                margin=\\\"dense\\\"\\n                id=\\\"joinProjectId\\\"\\n                label=\\\"Project ID\\\"\\n                type=\\\"text\\\"\\n                fullWidth\\n                value={projectIdToJoin}\\n                onChange={(e) => setProjectIdToJoin(e.target.value)}\\n            />\\n        </DialogContent>\\n        <DialogActions>\\n            <Button onClick={handleCloseJoinDialog}>Cancel</Button>\\n            <Button onClick={handleJoinProjectSubmit}>Join</Button>\\n        </DialogActions>\\n    </Dialog>\\n          <ResourceManagement /> {/* Use the Resource Management component */}\\n      </div>\\n  );\\n};\\n\\nexport default Projects;\\n\",\"const reportWebVitals = onPerfEntry => {\\n  if (onPerfEntry && onPerfEntry instanceof Function) {\\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\\n      getCLS(onPerfEntry);\\n      getFID(onPerfEntry);\\n      getFCP(onPerfEntry);\\n      getLCP(onPerfEntry);\\n      getTTFB(onPerfEntry);\\n    });\\n  }\\n};\\n\\nexport default reportWebVitals;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\\nimport './index.css';\\nimport Home from './Home';\\nimport Projects from './Projects';\\nimport reportWebVitals from './reportWebVitals';\\n\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\nroot.render(\\n  <React.StrictMode>\\n    <Main />\\n  </React.StrictMode>\\n);\\n\\n\\nfunction Main() {\\n  return (\\n    <Router>\\n      <div>\\n        {/* Define your routes here */}\\n        <Routes>\\n          <Route path=\\\"/\\\" element={<Home />} /> {/* Main entry or home page */}\\n          <Route path=\\\"/projects\\\" element={<Projects />} /> {/* Route to list projects */}\\n          {/* Example: <Route path=\\\"/projects/:projectId\\\" element={<Project />} /> */}\\n        </Routes>\\n      </div>\\n    </Router>\\n  );\\n}\\n\\n// If you want to start measuring performance in your app, pass a function\\n// to log results (for example: reportWebVitals(console.log))\\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\\nreportWebVitals();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{106:function(e,t,a){},107:function(e,t,a){},114:function(e,t,a){\"use strict\";a.r(t);var n=a(0),r=a.n(n),l=a(80),c=a.n(l),o=a(65),i=a(5),s=(a(106),a(107),a(171)),m=a(172),u=a(123),p=a(166),d=a(167),E=a(169);var g=function(){const e=Object(i.o)(),[t,a]=Object(n.useState)(!1),[l,c]=Object(n.useState)(\"\"),[o,g]=Object(n.useState)(\"\"),[y,h]=Object(n.useState)(\"\"),[v,j]=Object(n.useState)(\"\"),[b,f]=Object(n.useState)(\"\"),[S,w]=Object(n.useState)(\"\");return r.a.createElement(s.a,{maxWidth:\"lg\"},r.a.createElement(m.a,{container:!0,spacing:2},r.a.createElement(m.a,{item:!0,xs:12,md:6},r.a.createElement(u.a,{variant:\"h5\",gutterBottom:!0},\"Login\"),r.a.createElement(\"form\",{onSubmit:async t=>{t.preventDefault();const n={loginUsername:l,loginUserID:o,loginPassword:y},r=await fetch(\"/login\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(n)});!0===(await r.json()).authentication?(localStorage.setItem(\"username\",l),e(\"/projects\")):a(!0)},style:{display:\"flex\",flexDirection:\"column\",gap:\"20px\"}},r.a.createElement(p.a,{label:\"Username\",variant:\"outlined\",value:l,onChange:e=>c(e.target.value)}),r.a.createElement(p.a,{label:\"User ID\",variant:\"outlined\",value:o,onChange:e=>g(e.target.value)}),r.a.createElement(p.a,{label:\"Password\",type:\"password\",variant:\"outlined\",value:y,onChange:e=>h(e.target.value)}),r.a.createElement(d.a,{type:\"submit\",variant:\"contained\",color:\"primary\"},\"Login\"))),r.a.createElement(m.a,{item:!0,xs:12,md:6},r.a.createElement(u.a,{variant:\"h5\",gutterBottom:!0},\"Create Account\"),r.a.createElement(\"form\",{onSubmit:async e=>{e.preventDefault();const t={username:v,userID:b,password:S},a=await fetch(\"/createaccount\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(t)});await a.json()},style:{display:\"flex\",flexDirection:\"column\",gap:\"20px\"}},r.a.createElement(p.a,{label:\"Username\",variant:\"outlined\",value:v,onChange:e=>j(e.target.value)}),r.a.createElement(p.a,{label:\"User ID\",variant:\"outlined\",value:b,onChange:e=>f(e.target.value)}),r.a.createElement(p.a,{label:\"Password\",type:\"password\",variant:\"outlined\",value:S,onChange:e=>w(e.target.value)}),r.a.createElement(d.a,{type:\"submit\",variant:\"contained\",color:\"primary\"},\"Submit\")))),r.a.createElement(E.a,{open:t,autoHideDuration:6e3,onClose:(e,t)=>{\"clickaway\"!==t&&a(!1)},message:\"Wrong Credentials. Please try again.\"}))},y=a(178),h=a(165),v=a(179),j=a(180),b=a(176),f=a(177),S=a(174);var w=e=>{let{name:t,members:a,onJoinLeave:l}=e;const[c,o]=Object(n.useState)(!1);return r.a.createElement(b.a,{variant:\"outlined\",sx:{margin:2}},r.a.createElement(f.a,{sx:{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"}},r.a.createElement(S.a,{sx:{display:\"flex\",flexDirection:\"column\",alignItems:\"flex-start\",gap:1}},r.a.createElement(u.a,{variant:\"h5\",component:\"div\"},t),a.map((e,t)=>r.a.createElement(u.a,{key:t,color:\"text.secondary\"},e))),r.a.createElement(d.a,{variant:\"contained\",color:c?\"secondary\":\"primary\",onClick:()=>{o(!c),l(t)}},c?\"Leave\":\"Join\")))},C=a(173);var x=()=>{const[e,t]=Object(n.useState)({hwSet1:{capacity:\"0\",available:\"0\"},hwSet2:{capacity:\"0\",available:\"0\"}});return Object(n.useEffect)(()=>{(async()=>{try{const a=await fetch(\"/get_resources\");if(a.ok){const e=await a.json();t({hwSet1:e.hwSet1,hwSet2:e.hwSet2})}else console.error(\"Failed to fetch resources\")}catch(e){console.error(\"Failed to fetch resources\",e)}})()},[]),r.a.createElement(C.a,{style:{margin:\"20px\",padding:\"20px\"}},r.a.createElement(u.a,{variant:\"h5\",gutterBottom:!0},\"Resource Management\"),r.a.createElement(m.a,{container:!0,spacing:2},r.a.createElement(m.a,{item:!0,xs:4},r.a.createElement(u.a,null,\"HWSet1 Capacity: \",e.hwSet1.capacity),r.a.createElement(u.a,null,\"HWSet1 Available: \",e.hwSet1.available)),r.a.createElement(m.a,{item:!0,xs:4},r.a.createElement(u.a,null,\"HWSet2 Capacity: \",e.hwSet2.capacity),r.a.createElement(u.a,null,\"HWSet2 Available: \",e.hwSet2.available)),r.a.createElement(m.a,{item:!0,xs:4},r.a.createElement(d.a,{variant:\"contained\",color:\"primary\"},\"Check-in\"),r.a.createElement(d.a,{variant:\"contained\",color:\"primary\"},\"Check-out\"))))};var I=()=>{const[e,t]=Object(n.useState)(!1),[a,l]=Object(n.useState)([]),c=async()=>{const e=localStorage.getItem(\"username\"),t=await fetch(\"/api/projects/\".concat(e)),a=await t.json();l(a.projects)};Object(n.useEffect)(()=>{c()},[]);const o=()=>{t(!1)},[i,s]=Object(n.useState)(!1),[m,E]=Object(n.useState)(\"\"),g=()=>s(!1);return r.a.createElement(\"div\",{style:{padding:20}},r.a.createElement(u.a,{variant:\"h4\",gutterBottom:!0},\"Projects\"),r.a.createElement(\"div\",{style:{display:\"flex\",flexDirection:\"column\",flexWrap:\"wrap\",gap:\"20px\",justifyContent:\"center\"}},a.map((e,t)=>r.a.createElement(w,{key:t,name:e.projectName,members:e.members}))),r.a.createElement(d.a,{variant:\"outlined\",onClick:()=>{t(!0)}},\"Create Project\"),r.a.createElement(y.a,{open:e,onClose:o},r.a.createElement(h.a,null,\"Create a New Project\"),r.a.createElement(v.a,null,r.a.createElement(p.a,{autoFocus:!0,margin:\"dense\",id:\"name\",label:\"Project Name\",type:\"text\",fullWidth:!0}),r.a.createElement(p.a,{margin:\"dense\",id:\"description\",label:\"Description\",type:\"text\",fullWidth:!0}),r.a.createElement(p.a,{margin:\"dense\",id:\"projectID\",label:\"Project ID\",type:\"text\",fullWidth:!0})),r.a.createElement(j.a,null,r.a.createElement(d.a,{onClick:o},\"Cancel\"),r.a.createElement(d.a,{onClick:async()=>{const e={username:localStorage.getItem(\"username\"),name:document.getElementById(\"name\").value,description:document.getElementById(\"description\").value,projectId:document.getElementById(\"projectID\").value};await fetch(\"/create_project\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({name:e.name,description:e.description,projectID:e.projectId,username:e.username})}),o(),await fetch(\"/create_project\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({name:e.name,description:e.description,projectID:e.projectId,username:e.username})}).then(e=>{e.ok?(c(),o()):console.error(\"Failed to create project\")})}},\"Submit\"))),r.a.createElement(d.a,{variant:\"outlined\",onClick:()=>s(!0)},\"Join Project\"),r.a.createElement(y.a,{open:i,onClose:g},r.a.createElement(h.a,null,\"Join a Project\"),r.a.createElement(v.a,null,r.a.createElement(p.a,{autoFocus:!0,margin:\"dense\",id:\"joinProjectId\",label:\"Project ID\",type:\"text\",fullWidth:!0,value:m,onChange:e=>E(e.target.value)})),r.a.createElement(j.a,null,r.a.createElement(d.a,{onClick:g},\"Cancel\"),r.a.createElement(d.a,{onClick:async()=>{const e=localStorage.getItem(\"username\");await fetch(\"/join_project\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({projectId:m,username:e})}),c(),s(!1)}},\"Join\"))),r.a.createElement(x,null),\" \")};var O=e=>{e&&e instanceof Function&&a.e(3).then(a.bind(null,181)).then(t=>{let{getCLS:a,getFID:n,getFCP:r,getLCP:l,getTTFB:c}=t;a(e),n(e),r(e),l(e),c(e)})};function P(){return r.a.createElement(o.a,null,r.a.createElement(\"div\",null,r.a.createElement(i.c,null,r.a.createElement(i.a,{path:\"/\",element:r.a.createElement(g,null)}),\" \",r.a.createElement(i.a,{path:\"/projects\",element:r.a.createElement(I,null)}),\" \")))}c.a.createRoot(document.getElementById(\"root\")).render(r.a.createElement(r.a.StrictMode,null,r.a.createElement(P,null))),O()},98:function(e,t,a){e.exports=a(114)}},[[98,1,2]]]);","extractedComments":[]}